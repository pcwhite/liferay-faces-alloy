<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.liferay.faces.alloy.demos</groupId>
		<artifactId>liferay-faces-alloy-showcase-demos</artifactId>
		<version>2.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
	</parent>
	<artifactId>alloy-showcase-webapp</artifactId>
	<packaging>war</packaging>
	<name>Alloy Showcase Webapp</name>
	<description>This plugin is the Liferay Faces Alloy Showcase demo webapp.</description>

	<profiles>
		<profile>
			<id>prettyfaces</id>
			<dependencies>
				<dependency>
					<groupId>com.ocpsoft</groupId>
					<artifactId>prettyfaces-jsf2</artifactId>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>integration</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.googlecode.maven-download-plugin</groupId>
						<artifactId>download-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>download-phantomjs</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>wget</goal>
								</goals>
								<configuration>
									<url>https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.8-macosx.zip</url>
									<unpack>true</unpack>
									<outputDirectory>${project.build.directory}/test</outputDirectory>
									<md5>fb850d56c033dd6e1142953904f62614</md5>
								</configuration>
							</execution>
							<execution>
								<id>download-casperjs</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>wget</goal>
								</goals>
								<configuration>
									<url>https://github.com/n1k0/casperjs/zipball/1.1-beta3</url>
									<unpack>true</unpack>
									<outputFileName>n1k0-casperjs-4f105a9.zip</outputFileName>
									<outputDirectory>${project.build.directory}/test</outputDirectory>
									<md5>a9c650291afee5a04adaaf729a50d60e</md5>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!--
						Note: We are not using casperjs-runner-maven-plugin becuase it is only designed to work when
						phantomjs is on the PATH. Since we are downloading phantomjs, we need to specify it using the
						PHANTOMJS_EXECUTABLE environment variable. casperjs-runner-maven-plugin actually has an option
						to set environment variables, but it does not respect them when it initially calls
						`casperjs - -version` so it fails.
					-->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.4.0</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${project.build.directory}/test/n1k0-casperjs-4f105a9/bin/casperjs</executable>
									<workingDirectory>${basedir}</workingDirectory>
									<arguments>
										<argument>test</argument>
										<argument>--verbose</argument>
										<argument>${basedir}/src/test/js</argument>
									</arguments>
									<environmentVariables>
										<PHANTOMJS_EXECUTABLE>${project.build.directory}/test/phantomjs-1.9.8-macosx/bin/phantomjs</PHANTOMJS_EXECUTABLE>
									</environmentVariables>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-install-plugin</artifactId>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<dependentWarExcludes>**/h-tags.properties,**/component/h/**/*.xhtml,**/images/jsf*.png</dependentWarExcludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.appfuse.plugins</groupId>
				<artifactId>maven-warpath-plugin</artifactId>
				<extensions>true</extensions>
				<executions>
					<execution>
						<goals>
							<goal>add-classes</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.java</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
		</resources>
	</build>

	<dependencies>
		<dependency>
			<groupId>com.liferay.faces.alloy</groupId>
			<artifactId>liferay-faces-alloy</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.liferay.faces.alloy</groupId>
			<artifactId>liferay-faces-alloy-reslib</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.liferay.faces.showcase</groupId>
			<artifactId>jsf-showcase-webapp</artifactId>
			<version>3.0.0-SNAPSHOT</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>com.liferay.faces.showcase</groupId>
			<artifactId>jsf-showcase-webapp</artifactId>
			<version>3.0.0-SNAPSHOT</version>
			<type>warpath</type>
		</dependency>
	</dependencies>

</project>
